# Copyright (c) 2023 Tim <tbckr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

# https://taskfile.dev

version: '3'

tasks:
  setup:precommit:
    desc: Setup git hooks
    preconditions:
      - which python3
    cmds:
      - python3 -m pip install --upgrade --user pre-commit
      - pre-commit install

  setup:go-tools:
    desc: Install tools
    preconditions:
      - which go
    cmds:
      - go install github.com/google/addlicense@latest
      # - go install github.com/terraform-linters/tflint@latest

  setup:
    desc: Setup development environment
    cmds:
      - task: setup:precommit
      - task: setup:go-tools

  license-header:
    desc: Add license header to all files
    cmds:
      - |
        addlicense -c "Tim <tbckr>" -l MIT -s -v \
        -ignore ".idea/**" \
        -ignore ".task/**" \
        -ignore "original-foundation/**" \
        .

  go:prepare:
    desc: Install dependencies
    dir: test/integration
    cmds:
      - go mod tidy

  go:fmt:
    desc: gofumpt all code
    dir: test/integration
    cmds:
      - gofumpt -w -l .

  go:lint:
    desc: Lint the code with golangci-lint
    dir: test/integration
    cmds:
      - golangci-lint run ./...

  go:
    desc: Run all go checks
    cmds:
      - task: go:prepare
      - task: go:fmt
      - task: go:lint

  tf:fmt:
    desc: Format all files
    cmds:
      - terraform fmt -recursive

  tf:lint:
    desc: Lint all files
    cmds:
      - tflint --init
      - tflint --config .tflint.hcl

  tf:test:
    desc: Run terratest tests
    dir: test/integration
    vars:
      TEST_OPTIONS: '{{default "" .TEST_OPTIONS}}'
      SOURCE_FILES: '{{default "./..." .SOURCE_FILES}}'
      TEST_PATTERN: '{{default "." .TEST_PATTERN}}'
    cmds:
      - go test {{.TEST_OPTIONS}} -failfast {{.SOURCE_FILES}} -run {{.TEST_PATTERN}} -timeout 30m

  tf:
    desc: Run all terraform checks
    cmds:
      - task: tf:fmt
      - task: tf:lint
      - task: tf:test

  ci:
    desc: Run all CI checks
    cmds:
      - task: go
      - task: tf

  ci:pull-request:
    desc: Run all CI checks for a pull request
    cmds:
      - task: go:fmt
      - task: go:lint
      - task: tf:fmt
      - task: tf:lint

  default:
    desc: Runs the default tasks
    cmds:
      - task: ci