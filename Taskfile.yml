# Copyright (c) 2023 Tim <tbckr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

# https://taskfile.dev

version: '3'

tasks:
  setup:precommit:
    desc: Setup git hooks
    preconditions:
      - which python3
    cmds:
      - python3 -m pip install --upgrade --user pre-commit
      - pre-commit install

  setup:go-tools:
    desc: Install tools
    preconditions:
      - which go
    cmds:
      - go install github.com/google/addlicense@latest
      - go install github.com/goreleaser/chglog/cmd/chglog@latest
      - go install github.com/caarlos0/svu@latest
      - go install github.com/terraform-docs/terraform-docs@latest

  setup:
    desc: Setup development environment
    cmds:
      - task: setup:precommit
      - task: setup:go-tools

  validate:devtools:
    desc: Validate that all necessary devtools are installed
    cmds:
      - which go 1>/dev/null || (echo "go is not installed" && exit 1)
      - which python3 1>/dev/null || (echo "python3 is not installed" && exit 1)
      - which docker 1>/dev/null || (echo "docker is not installed" && exit 1)
      - which task 1>/dev/null || (echo "task is not installed" && exit 1)
      - which pre-commit 1>/dev/null || (echo "pre-commit is not installed" && exit 1)
      - which addlicense 1>/dev/null || (echo "addlicense is not installed" && exit 1)
      - which svu 1>/dev/null || (echo "svu is not installed" && exit 1)
      - which tflint 1>/dev/null || (echo "tflint is not installed" && exit 1)
      - which chglog 1>/dev/null || (echo "chglog is not installed" && exit 1)
      - which goreleaser 1>/dev/null || (echo "goreleaser is not installed" && exit 1)
      - which terraform-docs 1>/dev/null || (echo "terraform-docs is not installed" && exit 1)

  license-header:
    desc: Add license header to all files
    cmds:
      - |
        addlicense -c "Tim <tbckr>" -l MIT -s -v \
        -ignore ".idea/**" \
        -ignore ".task/**" \
        -ignore "**/.terragrunt-cache/**" \
        -ignore "**/.terraform.lock.hcl" \
        .

  lint:md:
    desc: Lint markdown files
    cmds:
      - docker run --rm --pull always -v $(pwd):/app:ro ghcr.io/tbckr/markdownlint:18 . --config=.mdl_config.yaml

  lint:tf:
    desc: Lint terraform files
    cmds:
      - tflint --recursive

  lint:
    desc: Lint all files
    cmds:
      - task: lint:md
      - task: lint:tf

  terraform-docs:
    desc: Inject terraform docs into README.md files
    cmds:
      - terraform-docs markdown table .

  clean:
    desc: Clean up
    cmds:
      - rm changelog.yml

  changelog:
    desc: Updates CHANGELOG.md
    vars:
      NEXT: '{{default "" .NEXT}}'
    cmds:
      - chglog init
      - chglog add --version {{.NEXT}}
      - chglog format --template-file .github/CHANGELOG.tmpl --output CHANGELOG.md

  release:
    desc: Create a new tag with new semantic version and update CHANGELOG.md
    aliases: [ "r" ]
    vars:
      NEXT:
        sh: svu n
    cmds:
      - task: changelog
        vars:
          NEXT: '{{.NEXT}}'
      - git add CHANGELOG.md
      - "git commit -m \"chore: update CHANGELOG.md\""
      - git push
      - git tag {{.NEXT}}
      - git push --tags

  goreleaser:
    desc: Run goreleaser to create a new release on GitHub
    cmds:
      - goreleaser release --clean
