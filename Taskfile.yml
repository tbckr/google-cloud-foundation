# Copyright (c) 2023 Tim <tbckr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

# https://taskfile.dev

version: '3'

tasks:
  setup:precommit:
    desc: Setup git hooks
    preconditions:
      - which python3
    cmds:
      - python3 -m pip install --upgrade --user pre-commit
      - pre-commit install

  setup:go-tools:
    desc: Install tools
    preconditions:
      - which go
    cmds:
      - go install github.com/google/addlicense@latest
      # - go install github.com/terraform-linters/tflint@latest
      - go install github.com/goreleaser/chglog/cmd/chglog@latest
      - go install github.com/caarlos0/svu@latest

  setup:
    desc: Setup development environment
    cmds:
      - task: setup:precommit
      - task: setup:go-tools

  license-header:
    desc: Add license header to all files
    cmds:
      - |
        addlicense -c "Tim <tbckr>" -l MIT -s -v \
        -ignore ".idea/**" \
        -ignore ".task/**" \
        -ignore "**/.terragrunt-cache/**" \
        .

  terraform-docs:
    desc: Inject terraform docs into README.md files
    cmds:
      - terraform-docs markdown table .

  clean:
    desc: Clean up
    cmds:
      - rm changelog.yml

  changelog:
    desc: Updates CHANGELOG.md
    vars:
      NEXT: '{{default "" .NEXT}}'
    cmds:
      - chglog init
      - chglog add --version {{.NEXT}}
      - chglog format --template-file .github/CHANGELOG.tmpl --output CHANGELOG.md

  release:
    desc: Create a new tag with new semantic version and update CHANGELOG.md
    aliases: [ "r" ]
    vars:
      NEXT:
        sh: svu n
    cmds:
      - task: changelog
        vars:
          NEXT: '{{.NEXT}}'
      - git add CHANGELOG.md
      - "git commit -m \"chore: update CHANGELOG.md\""
      - git push
      - git tag {{.NEXT}}
      - git push --tags

  goreleaser:
    desc: Run goreleaser to create a new release on GitHub
    cmds:
      - goreleaser release --clean
